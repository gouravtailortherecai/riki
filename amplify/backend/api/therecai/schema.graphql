type Candidate @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  name: String!
  email: String!
  phone: String
  Applications: [Application] @hasMany(indexName: "byCandidate", fields: ["id"])
  resume: AWSURL
  skills: [String]
  education: String
  summary: String
  experience: Float
  linkedin: AWSURL
}

type Job @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  title: String!
  description: String
  applications: [Application] @hasMany(indexName: "byJob", fields: ["id"])
  ctc: [Float]
  experience: [Float]
  jd: AWSURL
}

type Application @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  job_id: ID! @index(name: "byJob")
  status: String
  feedbacks: [Feedback] @hasMany(indexName: "byApplication", fields: ["id"])
  candidateID: ID! @index(name: "byCandidate")
}

type Feedback @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  application_id: ID! @index(name: "byApplication", sortKeyFields: ["createdAt"])
  comment: String
  createdAt: AWSDateTime!
}

type Organization @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  name: String!
  profiles: [Profile] @hasMany(indexName: "byOrganization", fields: ["id"])
}

type Profile @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  organization_id: ID! @index(name: "byOrganization")
  role: String
  userName: String
}
 